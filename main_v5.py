# -*- coding: utf-8 -*-
"""main_v5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r4LSNABaTSmXD4XW2Eht0pbRUnen_EtK
"""

!git clone https://wayo116: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@github.com/wayo116/2306_l6.git

#!pip install scikit-image
# import tensorflow as tf
import os
import csv
# import collections,math
#import itertools
os.chdir('/content/2306_l6')

from datalists import dlists
# from Effi_v6 import Effi_TrainPred
# from randam_kaisai import randam_kaisai_multi3
# from find_kaisaihani import find_kaisaihani

from Dell6_v2 import Dell6
from Utility.inner_outer import inner_outer_manu, inner_outer_auto, inner_outer_other_manu, inner_outer_other_auto
from Utility.kfind import kfind, kfind2
from Utility.match_combi import yobu_combi, aisho_combi, yobu_lists, aisho_lists, yobu_dcnt, aisho_dcnt, yobu_aisho_combi
from Utility.max_in_min import max_in_min
from Utility.tate_hani import tate_hani, tate_hani2
from Utility.dataset import no_dataset, no_dataset_test, create_random_lists, create_random_lists_float, light_gbm
tate_hani2(dlists,1500,10)

outlists=[]

kaisai = 2
if kaisai == -1:
    #本番
    #最新結果がgitjubに登録済の時
    saisinkekka_list=[99,99,99,99,99,99]
    dlists = dlists
elif kaisai == 0:
    #最新結果がcolabにはあるが、gitjubには未登録の時
    saisinkekka_list=[1,2,8,9,10,20]
    dlists = dlists
elif kaisai > 0:
    saisinkekka_list = dlists[kaisai-1]
    dlists = dlists[kaisai:]
print("saisinkekka_list",saisinkekka_list)
print("dlists",dlists[:5])

#tate_hani(dlists,5)
'''
print('\n----学習----')

model_name='V2B0'
#model_name='V2B1'
#model_name='V2B0_none'
#model_name='V2B1_none'
#model_name='V2B2_none'
#model_name='V2B3_none'
#model_name='RegY320'

kaisu=100 #100
setcount=1 #1
kaisu_pre=100
setcount_pre=1 #固定
kaisai_list=find_kaisaihani(dlists,[[0,100],[35,100],[18,150]],5)
kaisai_list_pre=find_kaisaihani(dlists,[[0,100],[35,100],[18,150]],5)
#kaisai_list=randam_kaisai_multi3(3,43,1,88,1,[[4,24],[35,50]],[0,0])
#kaisai_list_pre=randam_kaisai_multi3(3,43,1,55,1,[[4,24],[35,50]],[0,0])
pltflag=0
brendflag=0
inflated=35 #35
inflated_pre=1
kosuu=43 #固定
kosuu_pre=6
hw=96
rdmhani=1
compactness = 21
n_segments = 800
youso_list=randam_kaisai_multi3(3,43,1,55,1,[[0,5]],[0,0])

#baseimg_name='base_img' #黒地に緑数字 68*62
#baseimg_name='base_img2' #カラー43種 フリーサイズ
#baseimg_name='base_img2_2' #カラー43種 マスク 96*96
#baseimg_name='base_img3' #タイル1毎色違い43種 フリーサイズ
#baseimg_name='base_img4' #カラーver2 43種 フリーサイズ
#baseimg_name='base_img4_2' #カラーver2 色彩調整43種 224*224
#baseimg_name='base_img5' #カラー5種 サイズフリー
baseimg_name='base_img5_2' #色彩調整5種
#baseimg_name='base_img6' #タイル10毎色違い5種
#baseimg_name='base_img6_2' #タイル5毎色違い9種
#baseimg_name='base_img_rail' #スライドパズルレール43種

effi_trainpred = Effi_TrainPred(model_name,kaisu,kaisu_pre,kaisai_list,kaisai_list_pre,pltflag,brendflag,inflated,inflated_pre,hw,rdmhani,baseimg_name,setcount,setcount_pre,kosuu,kosuu_pre,compactness,n_segments,youso_list)

dlists=dlists
epochs=5 #5
batch_size=32

modelflag=0
if modelflag == 0:
    model = effi_trainpred.effi_train2(dlists,epochs,batch_size)
    model.save('./my_model.h5')

elif modelflag == 1:
    model = tf.keras.models.load_model('./my_model.h5')

print('\n----推論予想----')

select_box=3
index="None"
saisinkekka=saisinkekka_list
bunkatu=5
pred_dlists = effi_trainpred.pred(dlists,model,select_box,index)
outlist=Dell6(dlists, pred_dlists, saisinkekka, bunkatu).shori()
#outlists.extend(outlist)
#print('outlist',outlist)
'''
'''
print('\n----推論以外で予想----')

bunkatu=4
list_all = list(range(1,44))
diff_list = set(pred_dlists) ^ set(list_all)
outlist=Dell6(dlists, diff_list, saisinkekka, bunkatu).shori()
#outlists.extend(outlist)
#print('outlist',outlist)
'''
'''
print('\n----inner_outer_manuで予想----')

saisinkekka=saisinkekka_list
bunkatu=5

in_hani=[0,1]
out_hani=[5,15]
in_combisu=1
out_combisu=5
pred_dlists=inner_outer_manu(dlists,in_hani,out_hani,in_combisu,out_combisu)

#shori2は、pred_dlistsには組合せリストを入れる
outlist=Dell6(dlists, pred_dlists, saisinkekka, bunkatu).shori2()
#outlists.extend(outlist)
#print('outlist',outlist)

print('\n----inner_outer_autoで予想----')

saisinkekka=saisinkekka_list
bunkatu=5
inner_idxs,outer_idxs = kfind2(dlists,10)

in_hani=inner_idxs
out_hani=outer_idxs
in_combisu=5
out_combisu=1
pred_dlists=inner_outer_auto(dlists,in_hani,out_hani,in_combisu,out_combisu)

#shori2は、pred_dlistsには組合せリストを入れる
outlist=Dell6(dlists, pred_dlists, saisinkekka, bunkatu).shori2()
#outlists.extend(outlist)
#print('outlist',outlist)

print('\n----inner_outer_other_manuで予想----')

saisinkekka=saisinkekka_list
bunkatu=5

in_hani=[0,10]
out_hani=[20,30]
in_combisu=4
out_combisu=1
notinout_combisu=1
pred_dlists=inner_outer_other_manu(dlists,in_hani,out_hani,in_combisu,out_combisu,notinout_combisu)

#shori2は、pred_dlistsには組合せリストを入れる
outlist=Dell6(dlists, pred_dlists, saisinkekka, bunkatu).shori2()
#outlists.extend(outlist)
#print('outlist',outlist)
'''
print('\n----inner_outer_other_autoで予想----')

saisinkekka=saisinkekka_list
bunkatu=5

inner_idxs,outer_idxs = kfind2(dlists,10)

in_hani=inner_idxs
out_hani=outer_idxs
in_combisu=4
out_combisu=1
notinout_combisu=1
pred_dlists=inner_outer_other_auto(dlists,in_hani,out_hani,in_combisu,out_combisu,notinout_combisu)

#shori2は、pred_dlistsには組合せリストを入れる
outlist=Dell6(dlists, pred_dlists, saisinkekka, bunkatu).shori2()
#outlists.extend(outlist)
#print('outlist',outlist)
'''
print('\n----match_combiで予想----')

saisinkekka=saisinkekka_list
bunkatu=5

kaisus = 50
sikichi = 1
pred_dlists=yobu_combi(dlists, kaisus, sikichi)

#kaisus = 50
#sikichi = 2
#pred_dlists=aisho_combi(dlists, kaisus, sikichi)

#shori2は、pred_dlistsには組合せリストを入れる
outlist=Dell6(dlists, pred_dlists, saisinkekka, bunkatu).shori2()
#outlists.extend(outlist)
#print('outlist',outlist)

print('\n----match_combiで予想----')

saisinkekka=saisinkekka_list
bunkatu=5

#kaisus = 50
#sikichi = 1
#pred_dlists=yobu_combi(dlists, kaisus, sikichi)

kaisus = 50
sikichi = 2
pred_dlists=aisho_combi(dlists, kaisus, sikichi)

#shori2は、pred_dlistsには組合せリストを入れる
outlist=Dell6(dlists, pred_dlists, saisinkekka, bunkatu).shori2()
#outlists.extend(outlist)
#print('outlist',outlist)
'''
'''
print('\n----match_combiで予想----')

saisinkekka=saisinkekka_list
bunkatu=5

kaisus = 150
yobu_dcnt = yobu_dcnt(dlists, kaisus)
sikichi = max_in_min(yobu_dcnt)
yobu_lists = yobu_lists(dlists, kaisus, sikichi)

kaisus = 150
aisho_dcnt = aisho_dcnt(dlists, kaisus)

sikichi = max_in_min(aisho_dcnt)

thani = 150
ttopx = 5

pred_dlists = yobu_aisho_combi(dlists, yobu_lists, aisho_dcnt, sikichi, thani, ttopx)

#shori2は、pred_dlistsには組合せリストを入れる
outlist=Dell6(dlists, pred_dlists, saisinkekka, bunkatu).shori2()
#outlists.extend(outlist)
#print('outlist',outlist)
'''

print('\n----lightGBMで予想----')
csv_dir = "./result.csv"

# ファイルが存在する場合のみ削除
if os.path.exists(csv_dir):
    os.remove(csv_dir)
    print("ファイルを削除しました。")
else:
    print("指定されたファイルは存在しません。")

csv_dir = "./result.csv"
with open(csv_dir, "a", newline="") as file:
    writer = csv.writer(file)
    writer.writerow(["st_cnt", "yousosu_cnt", "icchi", "dlists0", "score ,", "predictions","per"])

for st_cnt in range(1,2,1):
    for yousosu_cnt in range(12,15,1):
        range_start = 1
        range_end = 24
        yousosu = yousosu_cnt
        target_kaisu_lists = create_random_lists(range_start, range_end, yousosu)

        st = st_cnt
        dlists0 = dlists[st-1]

        dlists1 = dlists[st+1:500+st+1]
        data = no_dataset(dlists1, target_kaisu_lists)

        dlists2 = dlists[st:500+st]
        data2 = no_dataset_test(dlists2, target_kaisu_lists)

        score ,predictions = light_gbm(data, data2)

        icchi =  len(set(dlists0) & set(predictions))
        print(icchi)

        per = icchi/len(set(predictions))*100
        print(per)

        # csv_dir = "./result.csv"
        with open(csv_dir, "a", newline="") as file:
            writer = csv.writer(file)
            # writer.writerow(["yousosu_cnt", "icchi", "dlists0", "score ,", "predictions"])
            writer.writerow([st_cnt, yousosu_cnt, icchi, dlists0, score ,predictions, per])

from google.colab import drive
drive.mount('/content/drive')